dir.create(path = path_to_folder_of_original)
file.copy(current_file_path, path_to_folder_of_original)
}
file_paths <- c(file_paths, current_file_path)
}
# maybe search sub folders
for (path_index in 1:length(file_paths)) {
current_marker <- file_paths[path_index]
marker_lines <- readLines(con = current_marker)
for (trigger_index in 1:length(target_triggers)) {
current_trigger <- target_triggers[trigger_index]
number_of_samples_row <- which(marker_lines == current_trigger) +10
first_trial_marker <- which(marker_lines == current_trigger) +13
number_of_triggers_to_remove <- length(delete_trigger_numbers)
new_number_of_triggers <- as.numeric(marker_lines[number_of_samples_row]) -
number_of_triggers_to_remove
marker_lines[number_of_samples_row] <- as.character(new_number_of_triggers)
trigger_rows_to_remove <- first_trial_marker + delete_trigger_numbers -1
new_marker_lines <- marker_lines[-trigger_rows_to_remove]
writeLines(text = new_marker_lines, con = current_file_path)
}
}
}
parent_path <- '/home/andrewf/Research_data/MEG/UGA_scene_faces/raw/'
list.dirs(parent_path)
possible_dir_paths <- list.dirs(parent_path)
grepl(pattern = "run[1+2]$", possible_dir_paths)
possible_dir_paths[grepl(pattern = "run[1+2]$", possible_dir_paths)]
possible_dir_paths[grepl(pattern = "run[1]$", possible_dir_paths)]
possible_dir_paths
possible_dir_paths[grepl(pattern = ".run[1]$", possible_dir_paths)]
possible_dir_paths[grepl(pattern = "*run[1]$", possible_dir_paths)]
grep(pattern = "run", x = possible_dir_paths)
possible_dir_paths
grepl(pattern = "run", x = possible_dir_paths)
grepl(pattern = "run1", x = possible_dir_paths)
grepl(pattern = "run_1", x = possible_dir_paths)
grepl(pattern = "run_[1+2]$", x = possible_dir_paths)
possible_dir_paths[grepl(pattern = "*run_[1+2]$", possible_dir_paths)]
folder_paths <- possible_dir_paths[grepl(pattern = "*run_[1+2]$", possible_dir_paths)]
folder_paths[1:48]
folder_paths <- folder_paths[1:48]
folders
folders <- "/home/andrewf/Research_data/MEG/UGA_scene_faces/raw/meg1001/run_2"
folder_paths
folder_paths <- possible_dir_paths[grepl(pattern = "*run_[1+2]$", possible_dir_paths)]
folder_paths <- folder_paths[3:48]
folder_paths
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
#'
#' @author Andrew H Farkas, \email{andrewhfarkas@gmail.com}
#'
#' @export
marker_file_editor <- function(folders = NULL,
target_triggers = NULL,
delete_trigger_numbers = NULL) {
browser()
if (!is.character(folders) |
!is.character(target_triggers) |
!is.numeric(delete_trigger_numbers)) {
stop()
}
if (!(delete_trigger_numbers > 0)) {
stop()
}
# get paths to all marker files
file_paths <- character()
for (folder_index in 1:length(folders)) {
current_folder_path <- folders[folder_index]
meg_folder <- dir(current_folder_path, pattern = ".ds")
meg_folder_path <- file.path(current_folder_path, meg_folder)
current_file_path <- file.path(meg_folder_path,
"MarkerFile.mrk")
path_to_folder_of_original <- file.path(current_folder_path,
"original_markerfile")
if (!file.exists(path_to_folder_of_original)) {
dir.create(path = path_to_folder_of_original)
file.copy(current_file_path, path_to_folder_of_original)
}
file_paths <- c(file_paths, current_file_path)
}
# maybe search sub folders
for (path_index in 1:length(file_paths)) {
current_marker <- file_paths[path_index]
marker_lines <- readLines(con = current_marker)
for (trigger_index in 1:length(target_triggers)) {
current_trigger <- target_triggers[trigger_index]
number_of_samples_row <- which(marker_lines == current_trigger) +10
first_trial_marker <- which(marker_lines == current_trigger) +13
number_of_triggers_to_remove <- length(delete_trigger_numbers)
new_number_of_triggers <- as.numeric(marker_lines[number_of_samples_row]) -
number_of_triggers_to_remove
marker_lines[number_of_samples_row] <- as.character(new_number_of_triggers)
trigger_rows_to_remove <- first_trial_marker + delete_trigger_numbers -1
new_marker_lines <- marker_lines[-trigger_rows_to_remove]
writeLines(text = new_marker_lines, con = current_file_path)
}
}
}
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
file_paths
marker_lines[number_of_samples_row]
as.numeric(marker_lines[number_of_samples_row]) -
number_of_triggers_to_remove
marker_lines[number_of_samples_row]
#'
#' @author Andrew H Farkas, \email{andrewhfarkas@gmail.com}
#'
#' @export
marker_file_editor <- function(folders = NULL,
target_triggers = NULL,
delete_trigger_numbers = NULL) {
if (!is.character(folders) |
!is.character(target_triggers) |
!is.numeric(delete_trigger_numbers)) {
stop()
}
if (!(delete_trigger_numbers > 0)) {
stop()
}
# get paths to all marker files
file_paths <- character()
for (folder_index in 1:length(folders)) {
current_folder_path <- folders[folder_index]
meg_folder <- dir(current_folder_path, pattern = ".ds")
meg_folder_path <- file.path(current_folder_path, meg_folder)
current_file_path <- file.path(meg_folder_path,
"MarkerFile.mrk")
path_to_folder_of_original <- file.path(current_folder_path,
"original_markerfile")
if (!file.exists(path_to_folder_of_original)) {
dir.create(path = path_to_folder_of_original)
file.copy(current_file_path, path_to_folder_of_original)
}
file_paths <- c(file_paths, current_file_path)
}
# maybe search sub folders
browser()
for (path_index in 1:length(file_paths)) {
current_marker <- file_paths[path_index]
marker_lines <- readLines(con = current_marker)
for (trigger_index in 1:length(target_triggers)) {
new_marker_lines <- marker_lines
current_trigger <- target_triggers[trigger_index]
number_of_samples_row <- which(marker_lines == current_trigger) +10
first_trial_marker <- which(marker_lines == current_trigger) +13
number_of_triggers_to_remove <- length(delete_trigger_numbers)
new_number_of_triggers <- as.numeric(marker_lines[number_of_samples_row]) -
number_of_triggers_to_remove
new_marker_lines[number_of_samples_row] <- as.character(new_number_of_triggers)
trigger_rows_to_remove <- first_trial_marker + delete_trigger_numbers -1
new_marker_lines <- marker_lines[-trigger_rows_to_remove]
writeLines(text = new_marker_lines, con = current_file_path)
}
}
}
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
#'
#' @author Andrew H Farkas, \email{andrewhfarkas@gmail.com}
#'
#' @export
marker_file_editor <- function(folders = NULL,
target_triggers = NULL,
delete_trigger_numbers = NULL) {
if (!is.character(folders) |
!is.character(target_triggers) |
!is.numeric(delete_trigger_numbers)) {
stop()
}
if (!(delete_trigger_numbers > 0)) {
stop()
}
# get paths to all marker files
file_paths <- character()
for (folder_index in 1:length(folders)) {
current_folder_path <- folders[folder_index]
meg_folder <- dir(current_folder_path, pattern = ".ds")
meg_folder_path <- file.path(current_folder_path, meg_folder)
current_file_path <- file.path(meg_folder_path,
"MarkerFile.mrk")
path_to_folder_of_original <- file.path(current_folder_path,
"original_markerfile")
if (!file.exists(path_to_folder_of_original)) {
dir.create(path = path_to_folder_of_original)
file.copy(current_file_path, path_to_folder_of_original)
}
file_paths <- c(file_paths, current_file_path)
}
# maybe search sub folders
browser()
for (path_index in 1:length(file_paths)) {
current_marker <- file_paths[path_index]
marker_lines <- readLines(con = current_marker)
new_marker_lines <- marker_lines
for (trigger_index in 1:length(target_triggers)) {
current_trigger <- target_triggers[trigger_index]
number_of_samples_row <- which(marker_lines == current_trigger) +10
first_trial_marker <- which(marker_lines == current_trigger) +13
number_of_triggers_to_remove <- length(delete_trigger_numbers)
new_number_of_triggers <- as.numeric(marker_lines[number_of_samples_row]) -
number_of_triggers_to_remove
new_marker_lines[number_of_samples_row] <- as.character(new_number_of_triggers)
trigger_rows_to_remove <- first_trial_marker + delete_trigger_numbers -1
new_marker_lines <- marker_lines[-trigger_rows_to_remove]
writeLines(text = new_marker_lines, con = current_file_path)
}
}
}
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
new_marker_lines[number_of_samples_row]
trigger_rows_to_remove
#'
#' @author Andrew H Farkas, \email{andrewhfarkas@gmail.com}
#'
#' @export
marker_file_editor <- function(folders = NULL,
target_triggers = NULL,
delete_trigger_numbers = NULL) {
if (!is.character(folders) |
!is.character(target_triggers) |
!is.numeric(delete_trigger_numbers)) {
stop()
}
if (!(delete_trigger_numbers > 0)) {
stop()
}
# get paths to all marker files
file_paths <- character()
for (folder_index in 1:length(folders)) {
current_folder_path <- folders[folder_index]
meg_folder <- dir(current_folder_path, pattern = ".ds")
meg_folder_path <- file.path(current_folder_path, meg_folder)
current_file_path <- file.path(meg_folder_path,
"MarkerFile.mrk")
path_to_folder_of_original <- file.path(current_folder_path,
"original_markerfile")
if (!file.exists(path_to_folder_of_original)) {
dir.create(path = path_to_folder_of_original)
file.copy(current_file_path, path_to_folder_of_original)
}
file_paths <- c(file_paths, current_file_path)
}
# maybe search sub folders
browser()
for (path_index in 1:length(file_paths)) {
current_marker <- file_paths[path_index]
marker_lines <- readLines(con = current_marker)
new_marker_lines <- marker_lines
for (trigger_index in 1:length(target_triggers)) {
current_trigger <- target_triggers[trigger_index]
number_of_samples_row <- which(marker_lines == current_trigger) +10
first_trial_marker <- which(marker_lines == current_trigger) +13
number_of_triggers_to_remove <- length(delete_trigger_numbers)
new_number_of_triggers <- as.numeric(marker_lines[number_of_samples_row]) -
number_of_triggers_to_remove
new_marker_lines[number_of_samples_row] <- as.character(new_number_of_triggers)
trigger_rows_to_remove <- first_trial_marker + delete_trigger_numbers -1
new_marker_lines <- new_marker_lines[-trigger_rows_to_remove]
writeLines(text = new_marker_lines, con = current_file_path)
}
}
}
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
#'
#' @author Andrew H Farkas, \email{andrewhfarkas@gmail.com}
#'
#' @export
marker_file_editor <- function(folders = NULL,
target_triggers = NULL,
delete_trigger_numbers = NULL) {
if (!is.character(folders) |
!is.character(target_triggers) |
!is.numeric(delete_trigger_numbers)) {
stop()
}
if (!(delete_trigger_numbers > 0)) {
stop()
}
# get paths to all marker files
file_paths <- character()
for (folder_index in 1:length(folders)) {
current_folder_path <- folders[folder_index]
meg_folder <- dir(current_folder_path, pattern = ".ds")
meg_folder_path <- file.path(current_folder_path, meg_folder)
current_file_path <- file.path(meg_folder_path,
"MarkerFile.mrk")
path_to_folder_of_original <- file.path(current_folder_path,
"original_markerfile")
if (!file.exists(path_to_folder_of_original)) {
dir.create(path = path_to_folder_of_original)
file.copy(current_file_path, path_to_folder_of_original)
}
file_paths <- c(file_paths, current_file_path)
}
# maybe search sub folders
browser()
for (path_index in 1:length(file_paths)) {
current_marker <- file_paths[path_index]
marker_lines <- readLines(con = current_marker)
new_marker_lines <- marker_lines
for (trigger_index in 1:length(target_triggers)) {
current_trigger <- target_triggers[trigger_index]
number_of_samples_row <- which(marker_lines == current_trigger) +10
first_trial_marker <- which(marker_lines == current_trigger) +13
number_of_triggers_to_remove <- length(delete_trigger_numbers)
new_number_of_triggers <- as.numeric(marker_lines[number_of_samples_row]) -
number_of_triggers_to_remove
new_marker_lines[number_of_samples_row] <- as.character(new_number_of_triggers)
trigger_rows_to_remove <- first_trial_marker + delete_trigger_numbers -1
new_marker_lines <- new_marker_lines[-trigger_rows_to_remove]
writeLines(text = new_marker_lines, con = current_marker)
}
}
}
#'
#' @author Andrew H Farkas, \email{andrewhfarkas@gmail.com}
#'
#' @export
marker_file_editor <- function(folders = NULL,
target_triggers = NULL,
delete_trigger_numbers = NULL) {
if (!is.character(folders) |
!is.character(target_triggers) |
!is.numeric(delete_trigger_numbers)) {
stop()
}
if (!(delete_trigger_numbers > 0)) {
stop()
}
# get paths to all marker files
file_paths <- character()
for (folder_index in 1:length(folders)) {
current_folder_path <- folders[folder_index]
meg_folder <- dir(current_folder_path, pattern = ".ds")
meg_folder_path <- file.path(current_folder_path, meg_folder)
current_file_path <- file.path(meg_folder_path,
"MarkerFile.mrk")
path_to_folder_of_original <- file.path(current_folder_path,
"original_markerfile")
if (!file.exists(path_to_folder_of_original)) {
dir.create(path = path_to_folder_of_original)
file.copy(current_file_path, path_to_folder_of_original)
}
file_paths <- c(file_paths, current_file_path)
}
# maybe search sub folders
browser()
for (path_index in 1:length(file_paths)) {
current_marker <- file_paths[path_index]
marker_lines <- readLines(con = current_marker)
new_marker_lines <- marker_lines
for (trigger_index in 1:length(target_triggers)) {
current_trigger <- target_triggers[trigger_index]
number_of_samples_row <- which(marker_lines == current_trigger) +10
first_trial_marker <- which(marker_lines == current_trigger) +13
number_of_triggers_to_remove <- length(delete_trigger_numbers)
new_number_of_triggers <- as.numeric(marker_lines[number_of_samples_row]) -
number_of_triggers_to_remove
new_marker_lines[number_of_samples_row] <- as.character(new_number_of_triggers)
trigger_rows_to_remove <- first_trial_marker + delete_trigger_numbers -1
new_marker_lines <- new_marker_lines[-trigger_rows_to_remove]
writeLines(text = new_marker_lines, con = current_marker)
}
}
}
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
#'
#' @author Andrew H Farkas, \email{andrewhfarkas@gmail.com}
#'
#' @export
marker_file_editor <- function(folders = NULL,
target_triggers = NULL,
delete_trigger_numbers = NULL) {
if (!is.character(folders) |
!is.character(target_triggers) |
!is.numeric(delete_trigger_numbers)) {
stop()
}
if (!(delete_trigger_numbers > 0)) {
stop()
}
# get paths to all marker files
file_paths <- character()
for (folder_index in 1:length(folders)) {
current_folder_path <- folders[folder_index]
meg_folder <- dir(current_folder_path, pattern = ".ds")
meg_folder_path <- file.path(current_folder_path, meg_folder)
current_file_path <- file.path(meg_folder_path,
"MarkerFile.mrk")
path_to_folder_of_original <- file.path(current_folder_path,
"original_markerfile")
if (!file.exists(path_to_folder_of_original)) {
dir.create(path = path_to_folder_of_original)
file.copy(current_file_path, path_to_folder_of_original)
}
file_paths <- c(file_paths, current_file_path)
}
# maybe search sub folders
for (path_index in 1:length(file_paths)) {
current_marker <- file_paths[path_index]
marker_lines <- readLines(con = current_marker)
new_marker_lines <- marker_lines
for (trigger_index in 1:length(target_triggers)) {
current_trigger <- target_triggers[trigger_index]
number_of_samples_row <- which(marker_lines == current_trigger) +10
first_trial_marker <- which(marker_lines == current_trigger) +13
number_of_triggers_to_remove <- length(delete_trigger_numbers)
new_number_of_triggers <- as.numeric(marker_lines[number_of_samples_row]) -
number_of_triggers_to_remove
new_marker_lines[number_of_samples_row] <- as.character(new_number_of_triggers)
trigger_rows_to_remove <- first_trial_marker + delete_trigger_numbers -1
new_marker_lines <- new_marker_lines[-trigger_rows_to_remove]
writeLines(text = new_marker_lines, con = current_marker)
}
}
}
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
folder_paths <- folder_paths[1:2]
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
folder_paths <- folder_paths[1:2]
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
folder_paths
folder_paths <- possible_dir_paths[grepl(pattern = "*run_[1+2]$", possible_dir_paths)]
folder_paths <- folder_paths[1:2]
folder_paths
folder_paths <- folder_paths[1:2]
folder_paths <- possible_dir_paths[grepl(pattern = "*run_[1+2]$", possible_dir_paths)]
folder_paths <- folder_paths[1:2]
folder_paths
folder_paths <- possible_dir_paths[grepl(pattern = "*run_[1+2]$", possible_dir_paths)]
folder_paths <- folder_paths[1:4]
folder_paths
marker_file_editor(folders = folder_paths,
target_triggers = "Stim11",
delete_trigger_numbers = 1)
close_then_stop <- function(error_message, open_file_connection) {
close(open_file_connection)
stop(error_message)
}
find_files_paths <- function(path,
pattern,
open_file_connection) {
if (missing(path) ||
missing(pattern) ||
missing(open_file_connection)) {
close_then_stop("all three arguments are necessary",
open_file_connection)
}
lines <- character()
files <- dir(path, pattern = pattern)
number_of_files <- length(files)
if (number_of_files == 0) return()
for (file_index in 1:number_of_files) {
path_to_file <- paste0(path,
"/",
files[file_index])
elements_of_path <- stringr::str_split(path_to_file,
"/")
elements_of_path <- unlist(elements_of_path)
elements_with_slash <- paste0(elements_of_path,
"\\")
collapsed_elements <- paste(elements_with_slash,
collapse = "")
collapsed_elements <- substr(collapsed_elements,
start = 1,
stop = nchar(path_to_file))
lines <- c(lines, collapsed_elements)
}
lines
}
mac_find_files_paths <- function(path,
pattern,
open_file_connection) {
if (missing(path) ||
missing(pattern) ||
missing(open_file_connection)) {
close_then_stop("all three arguments are necessary",
open_file_connection)
}
lines <- character()
files <- dir(path, pattern = pattern)
number_of_files <- length(files)
if (number_of_files == 0) return()
for (file_index in 1:number_of_files) {
path_to_file <- paste0(path,
"/",
files[file_index])
lines <- c(lines, path_to_file)
}
lines
}
